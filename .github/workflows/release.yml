name: Release

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: taiki-e/create-gh-release-action@v1
        with:
          # (optional)
          changelog: CHANGELOG.md
        env:
          # (required)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: ilammy/msvc-dev-cmd@v1.13.0
      - uses: leafo/gh-actions-lua@v10
        with:
          luaVersion: "5.4"
      - run: echo "PATH=$GITHUB_WORKSPACE/.lua/bin:$PATH" >> $GITHUB_ENV
      - run: echo "PATH=$GITHUB_WORKSPACE/.lua/lib:$PATH" >> $GITHUB_ENV
      - run: echo "LUA_LIB=$GITHUB_WORKSPACE/.lua/lib" >> $GITHUB_ENV
      - run: echo "LUA_LIB_NAME=lua" >> $GITHUB_ENV
      - run: echo "LUA_NO_PKG_CONFIG=1" >> $GITHUB_ENV
      #- run: ln -s $GITHUB_WORKSPACE/.lua/lib/lua5.4.pc $HOME/.local/lib/pkgconfig/lua5.4.pc
      - if: matrix.os == 'windows-latest'
        run: rm "C:/Program Files/Git/usr/bin/link.exe"
        run: echo "PATH=$GITHUB_WORKSPACE/.lua/bin:$PATH" | Out-File -FilePath $env:GITHUB_ENV -Append
        run: echo "PATH=$GITHUB_WORKSPACE/.lua/lib:$PATH" | Out-File -FilePath $env:GITHUB_ENV -Append
        run: echo "LUA_LIB=$GITHUB_WORKSPACE/.lua/lib" | Out-File -FilePath $env:GITHUB_ENV -Append
        run: echo "LUA_LIB_NAME=lua" | Out-File -FilePath $env:GITHUB_ENV -Append
        run: echo "LUA_NO_PKG_CONFIG=1" | Out-File -FilePath $env:GITHUB_ENV -Append
      - uses: taiki-e/upload-rust-binary-action@v1.10.0
        with:
          # (required)
          bin: taunter
          # (optional) On which platform to distribute the `.tar.gz` file.
          # [default value: unix]
          # [possible values: all, unix, windows, none]
          tar: unix
          # (optional) On which platform to distribute the `.zip` file.
          # [default value: windows]
          # [possible values: all, unix, windows, none]
          zip: windows
          include: assets/config.json,assets/users.json,README.md,LICENSE
        env:
          # (required)
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
